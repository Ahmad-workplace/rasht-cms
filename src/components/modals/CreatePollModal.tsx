import React, { useState } from "react";
import { X } from "lucide-react";
import { QuestionSerialzer, Translation } from "@/types/poll.type";
import { translations } from "@/lib/constants/translations";

interface CreatePollModalProps {
  isOpen: boolean;
  onClose: () => void;
  onSubmit: (data: QuestionSerialzer) => void;
}

const CreatePollModal: React.FC<CreatePollModalProps> = ({
  isOpen,
  onClose,
  onSubmit,
}) => {
  const [formData, setFormData] = useState<QuestionSerialzer>({
    id: "", // UUID will be generated by the backend
    translations: [
      { id: "", text: "", language_code: "fa" }, // Farsi translation
      { id: "", text: "", language_code: "en" }, // English translation
    ],
  });

  const handleSubmit = (e: React.FormEvent) => {
    e.preventDefault();

    // Validate required fields
    if (!formData.translations[0].text.trim() || !formData.translations[1].text.trim()) {
      alert("لطفاً متن سوال را به هر دو زبان وارد کنید");
      return;
    }

    onSubmit(formData);
    setFormData({
      id: "",
      translations: [
        { id: "", text: "", language_code: "fa" },
        { id: "", text: "", language_code: "en" },
      ],
    });
  };

  if (!isOpen) return null;

  return (
    <div className="fixed inset-0 z-50 overflow-y-auto">
      <div className="flex items-center justify-center min-h-screen px-4 pt-4 pb-20 text-center sm:block sm:p-0">
        <div
          className="fixed inset-0 transition-opacity bg-gray-500 bg-opacity-75"
          onClick={onClose}
        />

        <div className="inline-block w-full max-w-2xl px-4 pt-5 pb-4 overflow-hidden text-right align-bottom transition-all transform bg-white rounded-lg shadow-xl sm:my-8 sm:align-middle sm:p-6">
          <div className="flex items-center justify-between mb-4">
            <button
              onClick={onClose}
              className="text-gray-400 hover:text-gray-500"
            >
              <X size={20} />
            </button>
            <h3 className="text-lg font-medium text-gray-900">
              {translations.polls.addPoll}
            </h3>
          </div>

          <form onSubmit={handleSubmit} className="space-y-4">
            {/* Question Text in Farsi */}
            <div>
              <label
                htmlFor="question_text_fa"
                className="block text-sm font-medium text-gray-700"
              >
                {translations.polls.questionText} (فارسی) *
              </label>
              <input
                type="text"
                id="question_text_fa"
                value={formData.translations[0].text}
                onChange={(e) =>
                  setFormData({
                    ...formData,
                    translations: [
                      { ...formData.translations[0], text: e.target.value },
                      formData.translations[1],
                    ],
                  })
                }
                className="block w-full mt-1 border-gray-300 rounded-md shadow-sm focus:ring-indigo-500 focus:border-indigo-500 sm:text-sm"
                required
              />
            </div>

            {/* Question Text in English */}
            <div>
              <label
                htmlFor="question_text_en"
                className="block text-sm font-medium text-gray-700"
              >
                {translations.polls.questionText} (English) *
              </label>
              <input
                type="text"
                id="question_text_en"
                value={formData.translations[1].text}
                onChange={(e) =>
                  setFormData({
                    ...formData,
                    translations: [
                      formData.translations[0],
                      { ...formData.translations[1], text: e.target.value },
                    ],
                  })
                }
                className="block w-full mt-1 border-gray-300 rounded-md shadow-sm focus:ring-indigo-500 focus:border-indigo-500 sm:text-sm"
                required
              />
            </div>

            {/* Submit and Cancel Buttons */}
            <div className="mt-6 space-x-3 space-x-reverse text-left">
              <button
                type="submit"
                className="inline-flex justify-center px-4 py-2 text-sm font-medium text-white bg-indigo-600 border border-transparent rounded-md shadow-sm hover:bg-indigo-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-indigo-500"
              >
                {translations.polls.addPoll}
              </button>
              <button
                type="button"
                onClick={onClose}
                className="px-4 py-2 text-sm font-medium text-gray-700 bg-white border border-gray-300 rounded-md shadow-sm hover:bg-gray-50 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-indigo-500"
              >
                {translations.common.cancel}
              </button>
            </div>
          </form>
        </div>
      </div>
    </div>
  );
};

export default CreatePollModal;